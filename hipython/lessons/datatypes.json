{
    "lesson_name": "Python Data Types",
    "description": "Learn about Python's core data types including tuples, dictionaries, and sets. You'll learn how to create and manipulate these essential data structures.",
    "steps": [
        {
            "type": "chunk",
            "instruction": "Python has several built-in data types. You've seen lists, now let's explore tuples, dictionaries, and sets."
        },
        {
            "type": "input",
            "instruction": "Create a tuple containing the numbers 1, 2, and 3:",
            "hint": "Use parentheses () to create a tuple",
            "answer": {
                "type": "expression",
                "value": [
                    "(1, 2, 3)",
                    "tuple([1, 2, 3])"
                ]
            }
        },
        {
            "type": "input",
            "instruction": "Create a dictionary with keys 'name' and 'age', with values 'Alice' and 25:",
            "hint": "Use curly braces {} with key:value pairs",
            "answer": {
                "type": "expression",
                "value": [
                    "{'name': 'Alice', 'age': 25}",
                    "dict(name='Alice', age=25)"
                ]
            }
        },
        {
            "type": "input",
            "instruction": "Access the 'name' value from your dictionary:",
            "hint": "Use square bracket notation or the get() method",
            "answer": {
                "type": "expression",
                "value": [
                    "person['name']",
                    "person.get('name')"
                ]
            }
        },
        {
            "type": "input",
            "instruction": "Create a set containing the numbers 1, 2, 3, 2, 1 (notice duplicates will be removed):",
            "hint": "Use set() or curly braces {}",
            "answer": {
                "type": "expression",
                "value": [
                    "{1, 2, 3}",
                    "set([1, 2, 3])"
                ]
            }
        },
        {
            "type": "input",
            "instruction": "Create another set with numbers 2, 3, 4:",
            "hint": "Use curly braces {}",
            "answer": {
                "type": "expression",
                "value": [
                    "{2, 3, 4}",
                    "set([2, 3, 4])"
                ]
            }
        },
        {
            "type": "input",
            "instruction": "Find the intersection of your two sets (common elements):",
            "hint": "Use the & operator or intersection() method",
            "answer": {
                "type": "expression",
                "value": [
                    "numbers & more_numbers",
                    "numbers.intersection(more_numbers)"
                ]
            }
        },
        {
            "type": "chunk",
            "instruction": "Let's try some more advanced dictionary operations."
        },
        {
            "type": "input",
            "instruction": "Create a dictionary of prices: apple: 0.5, banana: 0.75, orange: 0.8",
            "hint": "Use curly braces with key:value pairs",
            "answer": {
                "type": "expression",
                "value": [
                    "{'apple': 0.5, 'banana': 0.75, 'orange': 0.8}",
                    "dict(apple=0.5, banana=0.75, orange=0.8)"
                ]
            }
        },
        {
            "type": "input",
            "instruction": "Get all the keys from the prices dictionary:",
            "hint": "Use the keys() method",
            "answer": {
                "type": "expression",
                "value": "prices.keys()"
            }
        },
        {
            "type": "chunk",
            "instruction": "Congratulations! You've completed the data types lesson. You now know how to:\n- Create and use tuples\n- Work with dictionaries\n- Manipulate sets\n- Access and modify different data structures"
        }
    ]
}